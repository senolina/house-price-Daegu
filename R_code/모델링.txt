

##1 Target ~ poly(DateSold, 2)

model1 <- lm(Price.per.Size ~ poly(as.numeric(DateSold), 2), data = train)
summary(model1)
par(mfrow = c(2, 2))
plot(model1)
par(mfrow = c(1, 1))


##2 Target ~ poly(DateSold, 2) + .

model2 <- lm(Price.per.Size ~ poly(as.numeric(DateSold), 2) + as.numeric(DateBuilt) + . - DateSold - DateBuilt, data = train)
summary(model2)
par(mfrow = c(2, 2))
plot(model2)
par(mfrow = c(1, 1))


##3 Log(Target) ~ poly(DateSold, 2) + .

model3 <- lm(log(Price.per.Size) ~ poly(as.numeric(DateSold), 2) + as.numeric(DateBuilt) + . - DateSold - DateBuilt, data = train)
summary(model3)
par(mfrow = c(2, 2))
plot(model3)
par(mfrow = c(1, 1))


##4 Sqrt(Target) ~ poly(DateSold, 2) + .

model4 <- lm(sqrt(Price.per.Size) ~ poly(as.numeric(DateSold), 2) + as.numeric(DateBuilt) + . - DateSold - DateBuilt, data = train)
summary(model4)
par(mfrow = c(2, 2))
plot(model4)
par(mfrow = c(1, 1))




## model 1
predicted_Y <- predict(model1, test) * test$Size.p.

# 평가지표
rmse(predicted_Y, test_Y)
mape(predicted_Y, test_Y)

plot(model1, 2)




## model 2
predicted_Y <- predict(model2, test) * test$Size.p.

# 평가지표
rmse(predicted_Y, test_Y)
mape(predicted_Y, test_Y)

plot(model2, 2)





## model 3
predicted_Y <- exp(predict(model3, test)) * test$Size.p.

# 평가지표
rmse(predicted_Y, test_Y)
mape(predicted_Y, test_Y)

plot(model3, 2)




## model 4
predicted_Y <- predict(model4, test)^2 * test$Size.p.

# 평가지표
rmse(predicted_Y, test_Y)
mape(predicted_Y, test_Y)

plot(model4, 2)